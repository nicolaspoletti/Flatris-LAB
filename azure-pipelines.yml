# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript
 
trigger:
- master

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'flatris-connection'
  
  # Web app name
  webAppName: 'flatrisapp-test'
  
  # Resource group
  resourceGroupName: 'FLATRIS-Test'

  # Environment name
  environmentName: 'flatrisapp-test'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Archive
  displayName: Archive stage
  jobs:
  - job: Archive
    displayName: Archive
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: self
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'
    
    - script: |
        npm install
      displayName: 'npm install dependencies'

    - script: |
        npm test
      displayName: 'Run tests'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Archive
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(environmentName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Azure Web App Deploy: flatrisapp-test'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webAppLinux
              appName: $(webAppName)
              runtimeStack: 'NODE|10.14'
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
